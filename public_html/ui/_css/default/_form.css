input,
textarea,
select {
  overflow: visible;

  width: 100%;
  margin: 0;
  margin-bottom: 1.5rem;
  padding: 0.3rem 0.5rem;
  vertical-align: bottom;

  color: inherit;
  border: 1px solid var(--foreground);
  /* border-radius: var(--border-radius); */
  outline-color: traansparent;
  /* background-color: var(--background); */
  box-shadow: none;
  font-family: inherit;

  font-size: inherit;
  line-height: inherit;
  accent-color: var(--charlie);

  /* -webkit-appearance: none;
          appearance: none; */
  text-fill-color: var(--background);

  &[type='submit'] {
    width: auto;
  }

  &:focus {
    outline: solid 2px var(--bravo);
    outline-offset: 2px;
  }
  & > *{
    font-size: 100%;
  }
}
[type='checkbox'] {
  display: inline-block;

  width: 1em;
  height: 1em;
  margin-right: 0.2rem;
  margin-bottom: 0;
  padding: 0;


  /* border: 1px solid currentColor; */

  /* -webkit-appearance: none; */
  &:checked {
    /* background-color: var(--foreground);
    box-shadow: inset 0 0 0 0.1rem var(--background); */
  }
}

[type='radio'] {
  display: inline-block;

  width: 1em;
  height: 1em;
  /* margin-right: 0.2rem; */
  /* margin-bottom: 0; */
  margin: 0;
  padding: 0;


  /* border: 1px solid currentColor; */
  /* border-radius: 50%; */

  /* -webkit-appearance: none; */
  &:checked {
    /* background-color: var(--foreground); */
    /* box-shadow: inset 0 0 0 0.1rem var(--background); */
  }
}
[type='checkbox'],
[type='radio']{
  vertical-align: middle;
	margin-block-start: calc(1ex - 1cap);
}

input,
textarea,
select {
  border: 1px solid var(--alpha);
}

datalist {
  display: none;
}

input:-webkit-autofill,
textarea:-webkit-autofill,
select:-webkit-autofill {
  color: #000;
  background-color: var(--background) !important;
  -webkit-box-shadow: 0 0 0 1000px var(--background) inset;
  box-shadow: 0 0 0 1000px var(--background) inset;

  -webkit-text-fill-color: var(--foreground);
  text-fill-color: var(--foreground);
}

input:-moz-focus-inner,
select:-moz-focus-inner,
*:focus-inner {
  padding: 0;

  border: none;
}

fieldset {
  margin: 0;
  padding: 0;
  border: none;
}

legend {
  font-size: inherit;
}

label {
  display: inline-block;
  /* display: block; */
  /* margin-bottom: 1.5rem; */

  cursor: pointer;
  font-size: inherit;

  & p {
    margin-bottom: 0;
  }
}

.honey {
  display: none;
}

form [type='submit'] {
  display: block !important;
  /* clear: both; */
}


/**
 * For browsers that support :user-invalid/:user-valid
 */
input:user-invalid {
  /* Invalid input UI styles */
}
input:user-valid {
 /* Valid input UI styles */
}

/**
 * When not supported, fallback to :invalid/:valid
 * Wrapping :valid/:invalid in a "not" @supports block ensures
 * that the invalid styles are not applied on page load in browsers
 * that do support :user-invalid/:user-valid
 */
@supports not selector(:user-invalid) {
  input:invalid {
    /* Invalid input UI styles */
  }
  input:valid {
    /* Valid input UI styles */
  }

}

/* Inputs don't allow for before or after */
.notification::after{
  /* height: 1em; */
  /* width: 1em; */
  transform: translateY(-3.4rem);
  position: absolute;
  right: 1rem;
  color: red;
  font-size: 1em;
  display: inline-block;
}

input:not(:placeholder-shown):required:user-invalid{
  background-color: color-mix(in srgb, red 10%, transparent);
}
input:placeholder-shown{
  background-color: color-mix(in srgb, orange 5%, transparent);
}
input:valid {
  background-color: color-mix(in srgb, green 5%, transparent);
}

input:not(:placeholder-shown):required:user-invalid + .notification{
  &::after{
    color: color-mix(in srgb, red  100%, transparent);
    content: '\2716';
  }
}
input:placeholder-shown + .notification{
  &::after{
    color: color-mix(in srgb, orange 100%, transparent);
    content: '⚠️';
  }
}
input:valid + .notification{
  &::after{
    color: color-mix(in srgb, green 100%, transparent);
    content: '✓';
  }
}

::marker {
  color: var(--bravo);
}

:is(::-webkit-calendar-picker-indicator,
::-webkit-clear-button,
::-webkit-inner-spin-button,
::-webkit-outer-spin-button) {
  color: var(--bravo);
}

/* EOF */
